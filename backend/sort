#!/bin/bash

SONGS="$HOME/Documents/pi/Music/Songs"
ORIGINAL_FILES="$HOME/Documents/pi/Music/Originals"
MISSING_METADATA="$HOME/Documents/pi/Music/Missing-Metadata"

mkdir -p "$ORIGINAL_FILES"
mkdir -p "$MISSING_METADATA"

# moves all audio files to top of the SONGS folder
while IFS= read -r -d '' file; do
  mv "$file" "$SONGS" 2> /dev/null
done < <(find "$SONGS" -type f \( -name '*.opus' -o -name '*.m4a' -o -name '*.mp3' \) -print0)

# removes all empty folders
for folder in "$SONGS"/*/; do
  rmdir "$folder" 2>/dev/null
done

echo "Convert files to mp3..."
echo ""
echo ""

# converts files to mp3 while keeping metadata and moving original files
for file in $SONGS/*.{m4a,opus}; do
  filename=$(basename "$file")
  dirname=$(dirname "$file")
  echo "Converting: $file"

  meta="-map_metadata 0:s:a:0"
  case $file in
    *.m4a) meta="";;
  esac

  # Convert file with metadata
  if ffmpeg -y -hide_banner -loglevel error -i "$file" -ac 2 -b:a 320k $meta "$dirname/${filename%.*}.mp3"; then
    # Move original file after successful conversion
    mv "$file" "$ORIGINAL_FILES"
    echo "Successfully converted: $filename"
  else
    echo "Error converting: $filename"
    continue
  fi
done 

echo ""

for file in $SONGS/*.mp3; do
  if [ "$(ffprobe -loglevel error -show_entries format_tags=title -of default=noprint_wrappers=1:nokey=1 "$file")" == "" ]; then
    mv "$file" "$MISSING_METADATA"
  fi
done

# Add metadata to Suno Songs
for file in $MISSING_METADATA/Suno\ -*.mp3; do
  filename=$(basename "$file")
  dirname=$(dirname "$file")
  cleanname=${filename:7}
  new_file="$dirname/$cleanname"
  echo "Add metadata $filename"
  if ffmpeg -loglevel error -i "$file" -metadata title="${cleanname%.*}" -metadata author="Suno" -metadata date="$(date +%Y)" -metadata comment="https://suno.com" "$new_file"; then
    echo "Successfully added metadata and renamed to $cleanname"
    if cp "$new_file" "$ORIGINAL_FILES"; then
      rm "$file"
    fi
    mv "$new_file" "$SONGS"
  else
    echo "Error adding metadata: $filename"
    continue
  fi
done

hashs=()

for file in $SONGS/*.mp3; do
  track="$(ffprobe -loglevel error -show_entries format_tags=track -of default=noprint_wrappers=1:nokey=1 "$file")"
  if [ "$track" != "" ]; then
    hashs+=("$track")
  fi
done

# Add track (id) to each Song if not present
counter=1
for file in $SONGS/*.mp3; do
  track_id="$(ffprobe -loglevel error -show_entries format_tags=track -of default=noprint_wrappers=1:nokey=1 "$file")"
  if [ "$(ffprobe -loglevel error -show_entries format_tags=track -of default=noprint_wrappers=1:nokey=1 "$file")" == "" ]; then
    sha="$(sha256sum "$file")"
    track="${sha:0:8}"

    while [[ ${hashs[@]} =~ $track ]]; do
      if (( $counter >= 56 )); then
        echo "This is really unlikely..."
        echo "File: $file"
        continue
      else
        track="${sha:counter:$((8+counter))}"
        ((counter++))
      fi
    done
    counter=1
    
    hashs+=("$track")
    
    ffmpeg -loglevel error -i "$file" -metadata track="$track" -codec copy -f mp3 "${file}.tmp" && \
    mv "${file}.tmp" "$file"

    echo "Added track ID $track to $(basename "$file")"
  fi
done